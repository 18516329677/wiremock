buildscript {
	//def githubBase = 'https://github.com/valkolovos/gradle_cobertura/raw/master/ivy'
    //apply from: "${githubBase}/gradle_cobertura/gradle_cobertura/1.0-rc4/coberturainit.gradle"
    
	repositories {
    	mavenRepo urls:['http://repo.smokejumperit.com', 'https://oss.sonatype.org']
	}
	dependencies {
    	classpath 'com.smokejumperit:gradle-plugins:0.7.3'
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: com.smokejumperit.gradle.OneJarPlugin
apply plugin: 'maven'

sourceCompatibility = 1.6
group = 'com.github.tomakehurst'
version = 1.13

repositories {
	mavenCentral()
}

dependencies {
	compile "org.mortbay.jetty:jetty:6.1.26"
	compile "com.google.guava:guava:10.0"
	compile "org.codehaus.jackson:jackson-core-asl:1.8.5", "org.codehaus.jackson:jackson-mapper-asl:1.8.5"
	compile "org.apache.httpcomponents:httpclient:4.1.2"
	compile "log4j:log4j:1.2.16"
	compile "net.sf.jopt-simple:jopt-simple:4.3"
	
	testCompile "junit:junit:4.8"
	testCompile "org.hamcrest:hamcrest-all:1.1"
	testCompile "org.jmock:jmock:2.5.1", "org.jmock:jmock-junit4:2.5.1"
	testCompile "net.sf.json-lib:json-lib:2.4:jdk15"
}

task "create-dirs" << {
   sourceSets.all*.java.srcDirs*.each { it.mkdirs() }
   sourceSets.all*.resources.srcDirs*.each { it.mkdirs() }
}

jar {
    manifest {
        attributes("Main-Class": "com.github.tomakehurst.wiremock.WireMockServerRunner")
    }
}

def releaseDirUrl

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: 'file:///Users/tomakehurst/dev/tomakehurst-mvn-repo/releases/')
            pom.artifactId = 'wiremock'
        }
    }
}

task release {
	dependsOn clean, oneJar, uploadArchives
}

task 'set-release-dir' << {
	def console = System.console()
	if (console) {
		println ''
		def releaseDir = console.readLine('> Please enter the full path to the release dir: ')
		println ''
		releaseDirUrl = 'file://' + releaseDir
		if (!releaseDirUrl.endsWith('/')) {
			releaseDirUrl = releaseDirUrl + '/';
		}
		
		tasks.uploadArchives.repositories.mavenDeployer.repository.url = releaseDirUrl
		
		println 'Release dir set to: ' + releaseDirUrl
	} else {
		logger.error "Cannot get console."
	}
}

task 'release-to' {
	dependsOn 'set-release-dir', clean, oneJar, uploadArchives
}

task 'add-copyright-headers' << {
	def copyrightNotice = """/*
 * Copyright (C) 2011 Thomas Akehurst
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"""

	def srcDir = new File('src')
	srcDir.eachFileRecurse { file ->
		if (file.name.endsWith(".java") && !file.text.contains(copyrightNotice)) {
			println "Adding copyright header to $file.path"
			def newFileText = copyrightNotice + file.text;
 			file.text = newFileText;
		}
	}
}
